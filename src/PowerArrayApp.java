/**
Write PowerArrayApp to read in CSV file and store data items within a traditional unsorted array
@author Mahmoodah Jaffer - JFFMAH001
@since 25 February 2019
*/

/**
	PowerArrayApp is an app that returns the power and voltage of a specified date/time given by user according to the data in the file
	cleaned_data.csv. If the date/time cannot be found then the app will return "Date/time not found". If no specific date/time is given 
	then all date/time, power and voltage of all the date/time's will be returned.
*/

import java.io.*;



public class PowerArrayApp
{

	public static boolean user = true;
	public static PowerStation[] powerdata;
	public static int opCount=0;

	public static void main (String [] args) throws IOException
	{
		/**
		The main method takes in the argument which would be the date time and uses the agument to 
		call either the printAllDateTimes function or the printDateTime
	   */
		if (args.length==0){
			printAllDateTimes();
		}
		else{
			printDateTime(args[0]);
		}

	}

		private static PowerStation[] fileData (String filename) throws FileNotFoundException, IOException
		{
			/**
			Method fileData reads in CSV file and stores the voltage, power and voltage data required from CSV file into a 500 element
			array of the type Powerstation to store each element

			@param filename String
			@returns powerdata array of type PowerStation
			@exception FileNotFoundException
			@exception IOException
			@see FileNotFoundException
			@see IOException
			*/
			PowerStation[] powerdata = new PowerStation [500]; //500 element array with PowerStation type to store the reuired data from CSV file

			int linepos = 0; // initialise placekeeper for lines, set to zero because no lines have been read yet

			FileReader read = new FileReader(filename); //reads in data from CSV file
			BufferedReader bread = new BufferedReader(read);// read is wrapped in the BufferedReader

			String firstline = bread.readLine(); //reads first line of text file - nothing will be done with this line because it holds no useful data
			String line = bread.readLine(); // second line of CSV file is read 

			while (line!=null)
			{
				String [] data = line.split(","); //the data from line is split by the commas and is being stored in an array 

				String datetime = data[0]; //sets variable datetime to the first element in data array - Date/Time
				String power = data[1];//sets variable power to the second element in data array - Global Active Power
				String voltage = data[3];//sets variable voltage to the fourth element in data array - Voltage

				powerdata[linepos] = new PowerStation(datetime,power,voltage); //Powerstation object will store the datetime, power and voltage in element of linepos


				line = bread.readLine(); //reads next line in CSV file
				linepos++;//increments the line position once next line is read
			}
			return powerdata;

		
		}

		private static void printDateTime( String dateTime) throws IOException{
			/**
			Method searches for datetime given using compareTo and returns the corresponding voltage and power 
			@param dateTime String
			@returns void
			@exception IOException
			@see IOException
			*/
			for (int j=0; j<500; j++){
				opCount++;
				if (fileData("cleaned_data.csv")[j].getDateTime().compareToIgnoreCase(dateTime) == 0){
					System.out.println(fileData("cleaned_data.csv")[j]+ "\n" + "Comparison Operations: " + opCount);
					user = false;
				}
					
			}
			if (user==true){
				System.out.println("Date/time not found" + "\n" + "Comparison Operations: "+ opCount);
			}


		}

		private static void printAllDateTimes() throws IOException{
			/**
			Method printAllDateTimes iterates through the array generated by fileData and prints out each element
			@param None
			@returns void
			@exception IOException
			@see IOException
			*/
			int count =0;

			for (int i=0; i<500; i++){
				    count++;
					System.out.println(fileData("cleaned_data.csv")[i]);
					System.out.println("Comparison Operations: " + count);
					

			}
		}


}